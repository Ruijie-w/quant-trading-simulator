#step 3.1: This file define the data structures that I will use to store market data and trading orders

import datetime

class MarketData:
    """
    MarketData stores information about a specific stock at a given timestamp.
    
    Attributes:
        symbol (str): The stock symbol.
        timestamp (datetime.datetime): The time at which the data was recorded.
        open (float): The opening price of the stock.
        high (float): The highest price of the stock during the time period.
        low (float): The lowest price of the stock during the time period.
        close (float): The closing price of the stock.
        volume (int): The trading volume of the stock during the time period.
    """
    def __init__(self, symbol, timestamp, open, high, low, close, volume):
        self.symbol = symbol
        self.timestamp = timestamp
        self.open = open
        self.high = high
        self.low = low
        self.close = close
        self.volume = volume

    def __repr__(self):
        return f"MarketData({self.symbol}, {self.timestamp}, {self.open}, {self.high}, {self.low}, {self.close}, {self.volume})"


class TradingOrder:
    """
    TradingOrder stores information about a buy or sell order for a stock.
    
    Attributes:
        symbol (str): The stock symbol.
        order_type (str): The type of order, either "BUY" or "SELL".
        quantity (int): The number of shares to buy or sell.
        price (float): The price per share for the order.
        timestamp (datetime.datetime): The time at which the order was placed.
    """
    BUY = "BUY"
    SELL = "SELL"

    
    def __init__(self, symbol, order_type, quantity, price, timestamp=None):
        self.symbol = symbol
        self.order_type = order_type
        self.quantity = quantity
        self.price = price
        self.timestamp = timestamp if timestamp else datetime.datetime.now()

    def __repr__(self):
        return f"TradingOrder({self.symbol}, {self.order_type}, {self.quantity}, {self.price}, {self.timestamp})"
  